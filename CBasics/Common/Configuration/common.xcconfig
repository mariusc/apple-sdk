// Architectures
ARCHS = $(ARCHS_STANDARD)

// Build locations

// Build options

// Code signing

// Deployment
COPY_PHASE_STRIP = NO        // Activating this setting causes binary files which are copied during the build (e.g., in a Copy Bundle Resources or Copy Files build phase) to be stripped of debugging symbols. It does not cause the linked product of a target to be stripped.
STRIP_INSTALLED_PRODUCT = NO // Activating this setting causes the linked product of the build to be stripped of symbols as part of deployment postprocessing.
SEPARATE_STRIP = NO          // Activating this setting when the linked product is to be stripped will cause stripping to occur via a separate invocation of strip(1).  Otherwise stripping will occur during linking, if possible.
DEPLOYMENT_POSTPROCESSING = NO

SKIP_INSTALL = NO
DEPLOYMENT_LOCATION = YES           // Whether the products should be placed on their installed location (YES) or on the built products folder
DSTROOT = $(PROJECT_DIR)/../bin/$(CONFIGURATION) // Root path for products
INSTALL_PATH = /$(PLATFORM_NAME)/CBasics         // Path to be appended to $(DSTROOT), where the product will be installed

// Kernel module

// Linking
DYLIB_CURRENT_VERSION = 0.0.2
DYLIB_COMPATIBILITY_VERSION = $(DYLIB_CURRENT_VERSION)

// Packaging
EXECUTABLE_PREFIX = lib
PRODUCT_NAME = cbasics
EXECUTABLE_EXTENSION = a

PUBLIC_HEADERS_FOLDER_PATH =        // The public header product folder. It is appendend to: $(DSTROOT)/$(INSTALL_PATH)
PRIVATE_HEADERS_FOLDER_PATH = $(PUBLIC_HEADERS_FOLDER_PATH)

// Search paths
ALWAYS_SEARCH_USER_PATHS = NO

// Testing

// Versioning

// Apple LLVM - Code Generation
// When enabled, all symbols are declared 'private extern' unless explicitly marked to be exported using __attribute__( (visibility("default")) ) in code. If not enabled, all symbols are exported unless explicitly marked as 'private extern'.
GCC_SYMBOLS_PRIVATE_EXTERN = NO

// Apple LLVM - Custom compiler flags

// Apple LLVM - Language
GCC_C_LANGUAGE_STANDARD = gnu11

// Apple LLVM - Language modules
CLANG_ENABLE_MODULES = YES

// Apple LLVM - Warnings
GCC_WARN_PEDANTIC = NO
